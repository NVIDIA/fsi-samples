- id: load_raw_csv
  type: LoadCsvNode
  conf:
    csvfile: data/pricing.csv
    17assets: false
  inputs: {}
  module: investment_nodes
- id: ''
  type: Output_Collector
  conf: {}
  inputs:
    in1: train_rsquared.out
    in2: test_rsquared.out
    in3: train_infer.out
    in4: test_infer.out
- id: bootstrap
  type: BootstrapNode
  conf:
    offset: 0
    samples: 4096
    partitions: 25
  inputs:
    in: load_raw_csv.df_out
  module: investment_nodes
- id: log_return
  type: LogReturnNode
  conf: {}
  inputs:
    in: bootstrap.out
  module: investment_nodes
- id: distance_node
  type: DistanceNode
  conf:
    window: 12
  inputs:
    in: log_return.out
  module: investment_nodes
- id: assets_order
  type: HierarchicalClusteringNode
  conf: {}
  inputs:
    in: distance_node.distance_df
  module: investment_nodes
- id: hrp_weight
  type: HRPWeightNode
  conf: {}
  inputs:
    asset_order_df: assets_order.out
    covariance_df: distance_node.cov_df
  module: investment_nodes
- id: portfolio_construct_hrp
  type: PortfolioNode
  conf: {}
  inputs:
    return_df: log_return.out
    weight_df: hrp_weight.out
    transaction_df: hrp_transaction_cost.out
  module: investment_nodes
- id: performance_hrp
  type: PerformanceMetricNode
  conf: {}
  inputs:
    in: leverage_hrp.lev_df
  module: investment_nodes
- id: nrp_weight
  type: NRPWeightNode
  conf: {}
  inputs:
    in: distance_node.cov_df
  module: investment_nodes
- id: portfolio_construct_nrp
  type: PortfolioNode
  conf: {}
  inputs:
    return_df: log_return.out
    transaction_df: nrp_transaction_cost.out
    weight_df: nrp_weight.out
  module: investment_nodes
- id: performance_nrp
  type: PerformanceMetricNode
  conf: {}
  inputs:
    in: leverage_nrp.lev_df
  module: investment_nodes
- id: max_drawdown
  type: MaxDrawdownNode
  conf:
    window: 12
  inputs:
    logreturn_df: log_return.out
  module: investment_nodes
- id: max_drawdown_feature
  type: FeatureNode
  conf:
    name: max_drawdown
  inputs:
    signal_df: max_drawdown.out
  module: investment_nodes
- id: max_raise_feature
  type: FeatureNode
  conf:
    name: max_raise
  inputs:
    signal_df: max_raise.out
    feature_df: max_drawdown_feature.out
  module: investment_nodes
- id: max_raise
  type: MaxDrawdownNode
  conf:
    negative: true
    window: 12
  inputs:
    logreturn_df: log_return.out
  module: investment_nodes
- id: all_data_distance
  type: DistanceNode
  conf:
    window: 60
  inputs:
    in: log_return.out
  module: investment_nodes
- id: all_max_raise
  type: MaxDrawdownNode
  conf:
    negative: true
    window: 60
  inputs:
    logreturn_df: log_return.out
  module: investment_nodes
- id: all_max_drawdown
  type: MaxDrawdownNode
  conf:
    negative: false
    window: 60
  inputs:
    logreturn_df: log_return.out
  module: investment_nodes
- id: all_max_drawdown_feature
  type: FeatureNode
  conf:
    name: all_max_drawdown
  inputs:
    signal_df: all_max_drawdown.out
  module: investment_nodes
- id: all_max_raise_feature
  type: FeatureNode
  conf:
    name: all_max_raise
  inputs:
    signal_df: all_max_raise.out
    feature_df: all_max_drawdown_feature.out
  module: investment_nodes
- id: mean_feature
  type: FeatureNode
  conf:
    name: mean
  inputs:
    feature_df: max_raise_feature.out
    signal_df: distance_node.mean_df
  module: investment_nodes
- id: std_feature
  type: FeatureNode
  conf:
    name: std
  inputs:
    signal_df: distance_node.std_df
    feature_df: mean_feature.out
  module: investment_nodes
- id: corr_feature
  type: FeatureNode
  conf:
    name: corr
  inputs:
    signal_df: distance_node.corr_df
    feature_df: std_feature.out
  module: investment_nodes
- id: all_mean_feature
  type: FeatureNode
  conf:
    name: all_mean
  inputs:
    feature_df: all_max_raise_feature.out
    signal_df: all_data_distance.mean_df
  module: investment_nodes
- id: all_std_feature
  type: FeatureNode
  conf:
    name: all_std
  inputs:
    feature_df: all_mean_feature.out
    signal_df: all_data_distance.std_df
  module: investment_nodes
- id: all_corr_feature
  type: FeatureNode
  conf:
    name: all_corr
  inputs:
    feature_df: all_std_feature.out
    signal_df: all_data_distance.corr_df
  module: investment_nodes
- id: aggregate_time_feature
  type: AggregateTimeFeatureNode
  conf: {}
  inputs:
    in: corr_feature.out
  module: investment_nodes
- id: merge_features
  type: MergeNode
  conf:
    column: sample_id
  inputs:
    right: all_corr_feature.out
    left: aggregate_time_feature.out
  module: investment_nodes
- id: hrp_nrp
  type: DiffNode
  conf: {}
  inputs:
    diff_b: performance_nrp.calmar_df
    diff_a: performance_hrp.calmar_df
  module: investment_nodes
- id: merge_target
  type: MergeNode
  conf:
    column: sample_id
  inputs:
    right: hrp_nrp.out
    left: merge_features.merged
  module: investment_nodes
- id: leverage_hrp
  type: LeverageNode
  conf:
    target_vol: 0.05
    long_window: 59
    short_window: 19
  inputs:
    in: portfolio_construct_hrp.out
  module: investment_nodes
- id: leverage_nrp
  type: LeverageNode
  conf:
    target_vol: 0.05
    long_window: 59
    short_window: 19
  inputs:
    in: portfolio_construct_nrp.out
  module: investment_nodes
- id: hrp_transaction_cost
  type: TransactionCostNode
  conf:
    cost: 0.0002
  inputs:
    logreturn_df: hrp_weight.out
  module: investment_nodes
- id: nrp_transaction_cost
  type: TransactionCostNode
  conf:
    cost: 0.0002
  inputs:
    logreturn_df: nrp_weight.out
  module: investment_nodes
- id: split
  type: DataSplittingNode
  conf:
    train_size: 0.9
    target: portfolio
  inputs:
    in: merge_target.merged
  module: greenflow_gquant_plugin.ml
- id: xgboost_train
  type: TrainXGBoostNode
  conf:
    num_of_rounds: 100
    columns:
      - month
      - sample_id
      - year
      - portfolio
    include: false
    xgboost_parameters:
      eta: 0.3
      min_child_weight: 1
      subsample: 1
      sampling_method: uniform
      colsample_bytree: 1
      colsample_bylevel: 1
      colsample_bynode: 1
      max_depth: 8
      max_leaves: 256
      grow_policy: depthwise
      gamma: 0
      lambda: 1
      alpha: 0
      tree_method: gpu_hist
      single_precision_histogram: false
      deterministic_histogram: false
      objective: 'reg:squarederror'
    target: portfolio
  inputs:
    in: split.train
  module: greenflow_gquant_plugin.ml
- id: train_infer
  type: InferXGBoostNode
  conf:
    prediction: predict
    pred_contribs: false
  inputs:
    data_in: split.train
    model_in: xgboost_train.model_out
  module: greenflow_gquant_plugin.ml
- id: test_infer
  type: InferXGBoostNode
  conf:
    prediction: predict
    pred_contribs: false
  inputs:
    data_in: split.test
    model_in: xgboost_train.model_out
  module: greenflow_gquant_plugin.ml
- id: train_rsquared
  type: RSquaredNode
  conf:
    columns:
      - portfolio
      - predict
  inputs:
    in: train_infer.out
  module: investment_nodes
- id: test_rsquared
  type: RSquaredNode
  conf:
    columns:
      - portfolio
      - predict
  inputs:
    in: test_infer.out
  module: investment_nodes
