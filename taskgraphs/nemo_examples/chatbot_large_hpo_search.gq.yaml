- id: rnn_train
  type: ContextCompositeNode
  conf:
    input: []
    output:
      - inference.torch_tensor
      - eval_data.out_nm
    context:
      num_layer:
        type: number
        value: 2
        map:
          - node_id: encoder
            xpath: encoder.conf.encoder_n_layers
          - node_id: decoder
            xpath: decoder.conf.decoder_n_layers
          - node_id: greedy_decoder
            xpath: greedy_decoder.conf.decoder_n_layers
      drop_out:
        type: number
        value: 0.1
        map:
          - node_id: encoder
            xpath: encoder.conf.dropout
          - node_id: decoder
            xpath: decoder.conf.dropout
      learning_rate:
        type: number
        value: 0.001
        map:
          - node_id: train
            xpath: train.conf.optimizer.parameters.lr
    taskgraph: taskgraphs/nemo_examples/chatbot_example.gq.yaml
  inputs: {}
- id: ""
  type: Output_Collector
  conf: {}
  inputs:
    in1: hpo.inference@torch_tensor
    in2: hpo.eval_data@out_nm
    in3: hpo.conf_out
- id: hpo
  type: NemoHyperTuneNode
  conf:
    parameters:
      - search:
          function: grid_search
          args:
            - 1
            - 2
        name: num_layer
      - search:
          function: uniform
          args:
            - 0
            - 0.3
        name: drop_out
      - search:
          function: loguniform
          args:
            - 0.0001
            - 0.01
            - 10
        name: learning_rate
    best:
      mode: min
      metric: loss
    tune:
      local_dir: ./ray
      name: exp
      num_samples: 10
      resources_per_trial:
        cpu: 1
        gpu: 1
    scheduler:
      parameters:
        time_attr: training_iteration
        max_t: 100
        grace_period: 1
        reduction_factor: 4
        brackets: 1
      name: AsyncHyperBandScheduler
    input: []
    output:
      - inference.torch_tensor
      - eval_data.out_nm
    context:
      num_layer:
        type: number
        value: 2
        map:
          - node_id: encoder
            xpath: encoder.conf.encoder_n_layers
          - node_id: decoder
            xpath: decoder.conf.decoder_n_layers
          - node_id: greedy_decoder
            xpath: greedy_decoder.conf.decoder_n_layers
      drop_out:
        type: number
        value: 0.1
        map:
          - node_id: encoder
            xpath: encoder.conf.dropout
          - node_id: decoder
            xpath: decoder.conf.dropout
      learning_rate:
        type: number
        value: 0.001
        map:
          - node_id: train
            xpath: train.conf.optimizer.parameters.lr
    taskgraph: taskgraphs/nemo_examples/chatbot_example.gq.yaml
  inputs:
    conf_in: rnn_train.conf_out
