- id: data
  type: RealFunctionDataLayerNode
  conf:
    batch_size: 128
    f_name: sin
    n: 10000
    x_lo: -4
    x_hi: 4
    name: data
  inputs: {}
  module: nemo.tutorials
- id: train
  type: NemoTrainNode
  conf:
    parameters:
      tensors_to_optimize:
        - network@loss@loss
      batches_per_step: 1
      stop_on_nan_loss: false
      synced_batchnorm: false
      synced_batchnorm_groupsize: 0
      gradient_predivide: false
      amp_max_loss_scale: 16777216
      reset: false
    check_point:
      load_from_folder: nemo_log
      checkpoints_to_keep: 4
      force_load: false
      folder: nemo_log
      epoch_freq: 1
    simple_logger:
      step_freq: 100
      tensors_to_log:
        - network@loss@loss
    eval_callback:
      ? eval_step
    warmup_policy: {}
    optimizer:
      parameters:
        num_epochs: 10
        lr: 0.001
        momentum: 0.9
        weight_decay: 0
      name: sgd
  inputs:
    network@loss@loss: network.loss@loss
- id: ""
  type: Output_Collector
  conf: {}
  inputs:
    in1: train.checkpoint_dir
    in2: infer.torch_tensor
- id: infer
  type: NemoInferNode
  conf:
    tensors:
      - network@net@y_pred
    checkpoint_dir: nemo_log
    ckpt_pattern: ""
    verbose: true
    cache: false
    use_cache: false
    offload_to_cpu: true
  inputs:
    log_dir: train.checkpoint_dir
    network@net@y_pred: network.net@y_pred
- id: network
  type: CompositeNode
  conf:
    input:
      - net.x
      - loss.target
    output:
      - net.y_pred
      - loss.loss
    subnodes_conf: {}
    taskgraph: taskgraphs/nemo_examples/nemo_train_infer.gq.yaml
  inputs:
    net@x: data.x
    loss@target: data.y
